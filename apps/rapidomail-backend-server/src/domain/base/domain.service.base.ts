/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Domain as PrismaDomain } from "@prisma/client";

export class DomainServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DomainCountArgs, "select">): Promise<number> {
    return this.prisma.domain.count(args);
  }

  async domains(args: Prisma.DomainFindManyArgs): Promise<PrismaDomain[]> {
    return this.prisma.domain.findMany(args);
  }
  async domain(
    args: Prisma.DomainFindUniqueArgs
  ): Promise<PrismaDomain | null> {
    return this.prisma.domain.findUnique(args);
  }
  async createDomain(args: Prisma.DomainCreateArgs): Promise<PrismaDomain> {
    return this.prisma.domain.create(args);
  }
  async updateDomain(args: Prisma.DomainUpdateArgs): Promise<PrismaDomain> {
    return this.prisma.domain.update(args);
  }
  async deleteDomain(args: Prisma.DomainDeleteArgs): Promise<PrismaDomain> {
    return this.prisma.domain.delete(args);
  }
}
